name: Production Deployment

on:
  push:
    branches:
      - main

jobs:
  code-quality-checks:
    name: Code QA Checks
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - run: |
          echo $PWD
          ls -la

      - name: Setup Node.js in the Runtime
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: "./package-lock.json"

  #     - name: Install the Dependencies
  #       run: npm ci
  #
  #     - name: Run Code Quality Checks
  #       run: npm run lint
  #
  #     - name: Run Prettier to Check for Formatting Issues
  #       run: npm run format:check
  #
  # deploy-production:
  #   name: Production Deployment
  #   runs-on: ubuntu-latest
  #   needs: code-quality-checks
  #   environment:
  #     name: Production
  #     url: https://jarmos.dev
  #   env:
  #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #   steps:
  #     - name: Checkout Repository
  #       uses: actions/checkout@v4
  #
  #     - name: Cache Vercel CLI
  #       uses: actions/cache@v3
  #       with:
  #         path: /usr/local/lib/node_modules
  #         key: ${{ runner.os }}-npm-global-${{ hashFiles('./package-lock.json') }}
  #         restore-keys: ${{ runner.os }}-npm-global-
  #
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #
  #     - name: Pull Vercel Environment Information
  #       run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
  #
  #     - name: Build Project Artifacts
  #       run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  #
  #     - name: Deploy Project Artifacts to Vercel
  #       id: prod-deployment
  #       run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
