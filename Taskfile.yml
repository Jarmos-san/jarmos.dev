version: "3"

silent: true

tasks:
  default:
    desc: Run a development version of the project
    summary: |
      Run a development version of the project locally

      This task will run the local development version of the website and
      setup the correct IP address and the ports to make the website accessible
      on a network.
    dir: ./web
    cmds:
      - npm run dev -- --host

  setup:
    desc: Setup the local development environment
    summary: |
      Setup the local development environment for the project.

      This task will install the node_modules, Terraform providers and anything
      else in preparation for starting a development environment for the project.
    dir: ./web
    cmds:
      - npm ci
      - task: precommit:setup
      - task: terraform:setup

  build:
    desc: Build the website statically on the local system.
    summary: |
      Build a local static version of the website.

      The task will check for any issues in source code before generating the
      static assets (the HTML, CSS and JS bundles) for the website. The command
      can be used in an CI/CD environment or chained to another task.
    dir: ./web
    cmds:
      - npm run build
    generates:
      - "./dist"
    sources:
      - "./src"
      - "./public"

  preview:
    desc: Preview the local statically build version of the website.
    summary: |
      Preview the local static version of the website.

      This task will load the statically generated version of the website
      locally. Its helpful in checking for any errors or unintended behaviours
      before deploying the website to production.
    deps:
      - task: build
    dir: ./web
    cmds:
      - npm run preview

  precommit:setup:
    internal: true
    cmds:
      - pre-commit install --install-hooks
      - pre-commit install --hook-type commit-msg

  terraform:setup:
    desc: Initialise the local development environment for Terraform
    summary: |
      Initialise the local development environment for Terraform.

      This task will automatically setup Terraform locally on the system for
      further development tasks. It'll correctly identify the directory where
      the Terraform code are located and invoke the appropriate command
      accordingly.
    dir: ./terraform
    cmds:
      - terraform init

  format:
    desc: Run various formatters on the entire source code
    summary: |
      Run various formatters on the entire source code.

      This task will run "prettier", "terraform fmt" and such on the entire
      code to ensure each and every line follows some standard practice of
      authoring code.
    cmds:
      - task: prettier
      - task: terraform

  prettier:
    internal: true
    dir: ./web
    cmds:
      - npm run format:fix

  terraform:
    internal: true
    dir: ./terraform
    cmds:
      - terraform fmt
